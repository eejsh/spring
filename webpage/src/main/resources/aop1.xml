<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

<!-- log기록을 하는 class를 로드함 (공통처리 객체)-->
<bean name="logger" class="aop.aop_log"/>
<!-- 추가, 삭제, 수정, 입력 class에 대한 모든 메소드를 로드 (실행처리 객체)-->
<bean name="member" class="aop.aop_class6"/>



<!-- aop: config aop환경설정 
ref=logger -> logger 적용
within(aop.*member)//  : aop_class6에 있는 모든 메소드 실행 선언
 						 (member=aop_class6으로 잡혀있으니 member로 선언)
 pointcut-ref="ptsc" ptsc 실행요청 
-->

<!--
AOP 형태 구조를 어떤식으로 사용????
aop 형태구조 : POJO구조 (DI+AOP+PSA)
aop : 관점지향 프로그래밍 (자주 사용해야 하는 기능을 상속시켜 적용하는 모듈) 
aop:config : aop 환경설정 태그  
aop:aspect : 공통기능 클래스를 로드
aop:pointcut : 해당 클래스와 함께 사용하는 형태 구조
expression : 필더링 되는 메소드형태
	-within : 특정 타입에 속하는 모든 메소드
	-execution : 특정 타입에 속하는 부분메소드 ex(expression="execution(aop.*aop_class6.memberin)...)

aop:before : 해당 메소드가 실행 전에 log 메소드가 발동함 
aop:after :  해당 메소드가 실행 후에 log 메소드가 발동함 (ex:웹사이트 index 실행 후 사이트 접속 시 log기록 남길때) 

*box: box들어간 모든 class 실행 (*모든) 
class box,
class abc_box,
class aaa_box
-->

<aop:config>
<aop:aspect id="loggeraop" ref="logger">
<aop:pointcut expression="within(aop.*aop_class6)" id="ptsc"/>

<!-- <aop:before method="logs" pointcut-ref="ptsc"/> -->
<aop:after  method="logs" pointcut-ref="ptsc"/>
</aop:aspect>
</aop:config>
</beans>
